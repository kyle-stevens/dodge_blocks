import pygame,sys
from pygame.locals import *
import random

class Player:
    x=0
    y=0
    height=0
    width=0
    speed=0
    right=False
    left=False
    up=True
    down=False
    def __init__(self, x,y,height,width,speed,right,left,up,down ):
        self.x = x *0.5
        self.y = y *0.5
        self.height = height
        self.width = width
        self.speed = speed
        self.right = right
        self.left = left
        self.up = up
        self.down = down

class Enemy:
    key = 0
    x = 0
    y = 0
    width = 0
    height = 0
    right = False
    left = False
    up = False
    down = False
    speed = 0
    def __init__(self, key):
        self.key = key
        self.speed = random.randint(1,5)
        self.x = random.randint(0,700)
        self.y = 0
        self.width = 10
        self.height = 10
        self.down = True
        rightorleft = random.randint(0,2)
        if rightorleft == 0:
            self.right = True
        else:
            self.left = True

black = (0,0,0)
red = (255,0,0)
grey = (150,150,150)
white = (255,255,255)
blue = (0,0,255)

def sprite(x, y, width, height, DISPLAY, color):
    pygame.draw.rect(DISPLAY, color, (x, y, width, height))

def sprite2(x, y, width, height, DISPLAY, color):
    pygame.draw.circle(DISPLAY, color, (int(x), int(y)), int(width)//2, 0)
    #switch enemies to rectangles
    #pygame.draw.rect(DISPLAY, color, (x, y, width, height))
    
def gameLoop():
    displayx = 1080
    displayy = 500
    round = 1

    # game loop
    running = True
    killed = False
    clock = pygame.time.Clock()
    
    p=Player(displayx,displayy,25,25,1,False,True,True,False)
    e=[Enemy(0)]
    
    while running:
        pygame.init()
        pygame.font.init()
    
        clock.tick(48)  # 48 is normval
    
        font = pygame.font.Font('freesansbold.ttf', 32)
        DISPLAY = pygame.display.set_mode((displayx, displayy))
        pygame.display.set_caption("Dodge Blocks")
        DISPLAY.fill(grey)
        
        #animation handling
        sprite(p.x, p.y, p.width, p.height, DISPLAY, black)
        if p.up and p.left:
            sprite(p.x, p.y, p.width//2, p.height//2, DISPLAY, blue)
        elif p.up and p.right:
            sprite(p.x+(p.width//2)+1, p.y, p.width//2, p.height//2, DISPLAY, blue)
        elif p.down and p.left:
            sprite(p.x, p.y+(p.height//2)+1, p.width // 2, p.height // 2, DISPLAY, blue)
        elif p.down and p.right:
            sprite(p.x + (p.width // 2)+1, p.y + (p.height // 2)+1, p.width // 2, p.height // 2, DISPLAY, blue)

        for enemy in e:
            sprite2(enemy.x, enemy.y, enemy.width, enemy.height, DISPLAY, black)
            if enemy.up and enemy.left:
                sprite2(enemy.x + enemy.speed*(enemy.width * 1.5) + 1, enemy.y+1+enemy.speed*(enemy.height*1.5), enemy.width // 2, enemy.height // 2, DISPLAY, black)
            elif enemy.up and enemy.right:
                sprite2(enemy.x - enemy.speed*(enemy.width * 1.5) - 1, enemy.y+1+enemy.speed*(enemy.height*1.5), enemy.width // 2, enemy.height // 2, DISPLAY, black)
            elif enemy.down and enemy.left:
                sprite2(enemy.x + enemy.speed*(enemy.width * 1.5) + 1, enemy.y - 1 - enemy.speed*(enemy.height * 1.5), enemy.width // 2,
                       enemy.height // 2, DISPLAY, black)
            elif enemy.down and enemy.right:
                sprite2(enemy.x - enemy.speed*(enemy.width * 1.5) - 1, enemy.y - 1 - enemy.speed*(enemy.height * 1.5), enemy.width // 2,
                       enemy.height // 2, DISPLAY, black)

        #check death
        if not killed:
            text0 = font.render("", True, (255, 255, 255))
            text = font.render(str(round), True, (255,255,255))
            text2 = font.render("", True, (255,255,255))
            round += 1
            if round % int(250) == 0 and len(e) < 25:
                e.append(Enemy(len(e)))
                if p.speed < 3:
                    p.speed += 1
        else:
            text0 = font.render(str(round), True, (255, 255, 255))
            text = font.render("GAME OVER", True, (255,255,255))
            text2 = font.render("Press Space to Restart", True, (255,255,255))
            p.speed = 0
            for enemy in e:
                enemy.speed = 0
        
        #define text displays and screen
        text0Rect = text0.get_rect()
        text0Rect.center = (displayx // 2, displayy // 2 - 40)
        textRect = text.get_rect()
        textRect.center = (displayx // 2, displayy // 2)
        text2Rect = text2.get_rect()
        text2Rect.center = (displayx // 2, displayy // 2 + 40)
        DISPLAY.blit(text, textRect)
        DISPLAY.blit(text2, text2Rect)
        DISPLAY.blit(text0, text0Rect)

        #set player bounds
        if p.x > (displayx - (p.width)):
            p.right = False
            p.left = True
        elif p.x < 0:
            p.left = False
            p.right = True
        if p.y > (displayy - p.height):
            p.down = False
            p.up = True
        elif p.y < 0:
            p.up = False
            p.down = True

        #commands
        for event in pygame.event.get():
            if event.type == QUIT:
                running = False
                #pygame.quit()
        if event.type == pygame.KEYDOWN:
            #this is for extra control, allowing for vertical and horizontal motion///not intuitive enough to be effective
            '''if event.key == pygame.K_RIGHT and p.right:
                p.right = False
            elif event.key == pygame.K_LEFT and p.left:
                p.left = False
            elif event.key == pygame.K_DOWN and p.down:
                p.down = False
            elif event.key == pygame.K_UP and p.up:
                p.up = False'''
            if event.key == pygame.K_LEFT:
                p.right = False
                p.left = True
            elif event.key == pygame.K_RIGHT:
                p.left = False
                p.right = True
            elif event.key == pygame.K_UP:
                p.down = False
                p.up = True
            elif event.key == pygame.K_DOWN:
                p.up = False
                p.down = True
            elif event.key == pygame.K_SPACE:
                running = True
                killed = False
                break


        #handle motion
        if p.left and p.up:
            p.x = p.x-p.speed
            p.y = p.y-p.speed
        elif p.left and p.down:
            p.x = p.x - p.speed
            p.y = p.y + p.speed
        elif p.right and p.up:
            p.x = p.x + p.speed
            p.y = p.y - p.speed
        elif p.right and p.down:
            p.x = p.x + p.speed
            p.y = p.y + p.speed
        elif p.left:
            p.x = p.x-p.speed
        elif p.right:
            p.x = p.x+p.speed
        elif p.up:
            p.y = p.y-p.speed
        elif p.down:
            p.y = p.y+p.speed


        for enemy in e:
            #create bounds for enemies
            if enemy.x > (displayx - (enemy.width)):
                # to create boundaries
                enemy.right = False
                enemy.left = True
            elif enemy.x < 0:
                # to create boundaries
                enemy.left = False
                enemy.right = True
            if enemy.y > (displayy - enemy.height):
                # to create boundaries
                enemy.down = False
                enemy.up = True
            elif enemy.y < 0:
                # to create boundaries
                enemy.up = False
                enemy.down = True
            #enemymotion
            if enemy.left and enemy.up:
                enemy.x = enemy.x-enemy.speed
                enemy.y = enemy.y-enemy.speed
            elif enemy.left and enemy.down:
                enemy.x = enemy.x - enemy.speed
                enemy.y = enemy.y + enemy.speed
            elif enemy.right and enemy.up:
                enemy.x = enemy.x + enemy.speed
                enemy.y = enemy.y - enemy.speed
            elif enemy.right and enemy.down:
                enemy.x = enemy.x + enemy.speed
                enemy.y = enemy.y + enemy.speed
            elif enemy.left:
                enemy.x = enemy.x-enemy.speed
            elif enemy.right:
                enemy.x = enemy.x+enemy.speed
            elif enemy.up:
                enemy.y = enemy.y-enemy.speed
            elif enemy.down:
                enemy.y = enemy.y+enemy.speed
        #pygame.time.delay(1)
        pygame.display.update()

        #check for player/enemy collision
        for enemy in e:
            if (enemy.x < p.x + p.width) and (enemy.x + enemy.width > p.x) and (enemy.y < p.y + p.height) and (enemy.y + enemy.height > p.y):
                killed = True

#play
while True:
    gameLoop()
